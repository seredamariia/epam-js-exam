// Differences between operators spread and rest, examples of their use

// Spread оператор розширює ітерабельні об'єкти у місцях, де очікується нуль або більше аргументів (для функцій) або елементів (для масивів) чи пар ключ-значення (для об'єктів).

// Spread оператор дозволяє легко створювати копії масивів або об'єднувати масиви.

const array1 = [1, 2, 3];
const array2 = [...array1]; // Копія array1
console.log(array2); // [1, 2, 3]

const array3 = [4, 5, 6];
const combinedArray = [...array1, ...array3];
console.log(combinedArray); // [1, 2, 3, 4, 5, 6]

// Spread оператор дозволяє копіювати властивості одного об'єкта в інший.

const obj1 = { a: 1, b: 2 };
const obj2 = { ...obj1, c: 3 }; // Копія obj1 з доданою властивістю c
console.log(obj2); // { a: 1, b: 2, c: 3 }

// Rest оператор використовується для збирання всіх залишкових елементів у масив або об'єкт. Він з'являється в функціональних аргументаї, деструктуризації масивів та об'єктів.

// Rest оператор дозволяє збирати невідоме число аргументів у масив.

function sum(...numbers) {
  return numbers.reduce((total, num) => total + num, 0);
}

console.log(sum(1, 2, 3)); // 6
console.log(sum(4, 5)); // 9

// Rest оператор дозволяє збирати залишкові елементи масиву при деструктиризації.

const [first, second, ...rest] = [1, 2, 3, 4, 5];
console.log(first); // 1
console.log(second); // 2
console.log(rest); // [3, 4, 5]

// Rest оператор дозволяє збирати залишкові властивості об'єкта ри деструктиризації.

const { a, b, ...restObj } = { a: 1, b: 2, c: 3, d: 4 };
console.log(a); // 1
console.log(b); // 2
console.log(restObj); // { c: 3, d: 4 }

// Відмінності між spread та rest операторами

// Контекст використання:
// - Spread використовується для розгортання елементів (масиви, об'єкти) в інші структури.
// - Rest використовується для збирання залишкових елементів в масив або об'єкт.

// Синтаксис:
// - Spread використовується в контексті передачі аргументів у функції, копіювання масивів або об'єктів.
// - Rest використовується в контексті функціональних аргументів або деструктуризації.

// Типи даних:
// - Spread працює з ітерабельними об'єктами (масиви, об'єкти).
// - Rest працює з залишковими аргументами функцій або елементами масивів та властивостями об'єктів.
